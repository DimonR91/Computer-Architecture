/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 3.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 3000.0;
	SIMULATION_TIME = 3000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("BUF")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("BUF[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUF";
}

SIGNAL("ZF")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AgB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AlB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("NUM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("NUM[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NUM";
}

SIGNAL("NUM[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NUM";
}

SIGNAL("NUM[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NUM";
}

SIGNAL("NUM[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NUM";
}

SIGNAL("NUM[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NUM";
}

SIGNAL("NUM[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NUM";
}

SIGNAL("NUM[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NUM";
}

SIGNAL("NUM[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NUM";
}

SIGNAL("DR1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DR1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR1";
}

SIGNAL("DR1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR1";
}

SIGNAL("DR1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR1";
}

SIGNAL("DR1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR1";
}

SIGNAL("DR1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR1";
}

SIGNAL("DR1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR1";
}

SIGNAL("DR1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR1";
}

SIGNAL("DR1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR1";
}

SIGNAL("D")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("CNTR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CNTR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CNTR";
}

SIGNAL("CNTR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CNTR";
}

SIGNAL("CNTR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CNTR";
}

SIGNAL("CNTR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CNTR";
}

SIGNAL("CNTR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CNTR";
}

SIGNAL("AX")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AX[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AX";
}

SIGNAL("AX[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AX";
}

SIGNAL("AX[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AX";
}

SIGNAL("AX[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AX";
}

SIGNAL("AX[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AX";
}

SIGNAL("AX[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AX";
}

SIGNAL("AX[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AX";
}

SIGNAL("AX[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AX";
}

SIGNAL("BX")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("BX[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BX";
}

SIGNAL("BX[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BX";
}

SIGNAL("BX[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BX";
}

SIGNAL("BX[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BX";
}

SIGNAL("BX[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BX";
}

SIGNAL("BX[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BX";
}

SIGNAL("BX[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BX";
}

SIGNAL("BX[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BX";
}

SIGNAL("ADR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ADR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADR";
}

SIGNAL("ADR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADR";
}

SIGNAL("ADR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADR";
}

SIGNAL("ADR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADR";
}

SIGNAL("ADR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADR";
}

SIGNAL("ADR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADR";
}

SIGNAL("ADR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADR";
}

SIGNAL("ADR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADR";
}

SIGNAL("BUF[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUF";
}

SIGNAL("BUF[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUF";
}

SIGNAL("BUF[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUF";
}

SIGNAL("BUF[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUF";
}

SIGNAL("BUF[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUF";
}

SIGNAL("BUF[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUF";
}

SIGNAL("BUF[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUF";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ControlBus[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ControlBus[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ControlBus[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ControlBus[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ControlBus[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ControlBus[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ControlBus[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ControlBus[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("BUF[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("ZF")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 980.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 1920.0;
	}
}

TRANSITION_LIST("AgB")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 980.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 1970.0;
	}
}

TRANSITION_LIST("AlB")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1080.0;
		LEVEL 1 FOR 1920.0;
	}
}

TRANSITION_LIST("IR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 330.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 660.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1035.0;
	}
}

TRANSITION_LIST("IR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 145.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 470.0;
		LEVEL 1 FOR 370.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 1125.0;
	}
}

TRANSITION_LIST("IR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 395.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 370.0;
		LEVEL 1 FOR 1125.0;
	}
}

TRANSITION_LIST("IR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1365.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 1035.0;
	}
}

TRANSITION_LIST("IR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1505.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 1035.0;
	}
}

TRANSITION_LIST("IR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("IR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("IR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("NUM[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("NUM[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("NUM[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("NUM[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("NUM[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("NUM[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("NUM[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("NUM[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("DR1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 150.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL Z FOR 50.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 140.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("DR1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 150.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 50.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("DR1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("DR1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 140.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("DR1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("DR1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 150.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 90.0;
			LEVEL Z FOR 50.0;
		}
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("DR1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 150.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 90.0;
			LEVEL Z FOR 50.0;
		}
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("DR1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 150.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 90.0;
			LEVEL Z FOR 50.0;
		}
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 90.0;
			LEVEL Z FOR 40.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("D[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 150.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL Z FOR 50.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 140.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("D[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 150.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 50.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("D[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("D[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 140.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("D[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("D[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 150.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 90.0;
			LEVEL Z FOR 50.0;
		}
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("D[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 150.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 90.0;
			LEVEL Z FOR 50.0;
		}
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("D[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 150.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 90.0;
			LEVEL Z FOR 50.0;
		}
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 90.0;
			LEVEL Z FOR 40.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 105.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 1165.0;
	}
}

TRANSITION_LIST("CNTR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1035.0;
	}
}

TRANSITION_LIST("CNTR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 1035.0;
	}
}

TRANSITION_LIST("CNTR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1065.0;
	}
}

TRANSITION_LIST("CNTR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1055.0;
	}
}

TRANSITION_LIST("CNTR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("AX[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 1760.0;
		LEVEL 0 FOR 1060.0;
	}
}

TRANSITION_LIST("AX[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 1380.0;
		LEVEL 0 FOR 290.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 1060.0;
	}
}

TRANSITION_LIST("AX[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1850.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 1060.0;
	}
}

TRANSITION_LIST("AX[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1940.0;
		LEVEL 1 FOR 1060.0;
	}
}

TRANSITION_LIST("AX[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1940.0;
		LEVEL 1 FOR 1060.0;
	}
}

TRANSITION_LIST("AX[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1940.0;
		LEVEL 1 FOR 1060.0;
	}
}

TRANSITION_LIST("AX[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("AX[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("BX[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 2880.0;
	}
}

TRANSITION_LIST("BX[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1640.0;
		LEVEL 1 FOR 1360.0;
	}
}

TRANSITION_LIST("BX[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("BX[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("BX[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("BX[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("BX[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("BX[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("ADR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 15.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 115.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 155.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 5.0;
			LEVEL X FOR 55.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 55.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 145.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 5.0;
			LEVEL X FOR 45.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 90.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 15.0;
		LEVEL X FOR 105.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 1170.0;
	}
}

TRANSITION_LIST("ADR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 15.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 115.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 155.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 5.0;
			LEVEL X FOR 55.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 55.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 145.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 5.0;
			LEVEL X FOR 45.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 15.0;
		LEVEL X FOR 105.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 1170.0;
	}
}

TRANSITION_LIST("ADR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 65.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL X FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL X FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 150.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL X FOR 90.0;
		LEVEL 1 FOR 40.0;
		LEVEL X FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 15.0;
		LEVEL X FOR 105.0;
		LEVEL 1 FOR 80.0;
		LEVEL X FOR 1175.0;
	}
}

TRANSITION_LIST("ADR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 65.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL X FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 60.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL X FOR 150.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 90.0;
		LEVEL 1 FOR 40.0;
		LEVEL X FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 15.0;
		LEVEL X FOR 105.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 1175.0;
	}
}

TRANSITION_LIST("ADR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 65.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL X FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 150.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 90.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 15.0;
		LEVEL X FOR 105.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 1175.0;
	}
}

TRANSITION_LIST("ADR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 65.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 100.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 60.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL X FOR 150.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL X FOR 90.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 15.0;
		LEVEL X FOR 105.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 1175.0;
	}
}

TRANSITION_LIST("ADR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 15.0;
		LEVEL 0 FOR 1230.0;
		LEVEL 1 FOR 120.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 15.0;
		LEVEL X FOR 35.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 240.0;
		LEVEL X FOR 1035.0;
	}
}

TRANSITION_LIST("ADR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 15.0;
		LEVEL 0 FOR 1350.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 60.0;
		LEVEL 1 FOR 15.0;
		LEVEL X FOR 35.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 240.0;
		LEVEL X FOR 1035.0;
	}
}

TRANSITION_LIST("BUF[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("BUF[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("BUF[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("BUF[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("BUF[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("BUF[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("BUF[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 300;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("ControlBus[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("ControlBus[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("ControlBus[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("ControlBus[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1375.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL U FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 15.0;
		LEVEL Z FOR 1360.0;
	}
}

TRANSITION_LIST("ControlBus[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1375.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 1360.0;
	}
}

TRANSITION_LIST("ControlBus[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 730.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 210.0;
		LEVEL Z FOR 310.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 1035.0;
	}
}

TRANSITION_LIST("ControlBus[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 190.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 90.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 310.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 1035.0;
	}
}

TRANSITION_LIST("ControlBus[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 100.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 90.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 1055.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "IR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11, 12, 13, 14, 15;
}

DISPLAY_LINE
{
	CHANNEL = "IR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "IR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "IR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "IR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "IR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "IR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "IR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "IR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "AX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
	CHILDREN = 17, 18, 19, 20, 21, 22, 23, 24;
}

DISPLAY_LINE
{
	CHANNEL = "AX[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "AX[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "AX[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "AX[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "AX[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "AX[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "AX[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "AX[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "BX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
	CHILDREN = 26, 27, 28, 29, 30, 31, 32, 33;
}

DISPLAY_LINE
{
	CHANNEL = "BX[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "BX[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "BX[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "BX[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "BX[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "BX[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "BX[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "BX[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "ZF";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AgB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AlB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ADR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
	CHILDREN = 38, 39, 40, 41, 42, 43, 44, 45;
}

DISPLAY_LINE
{
	CHANNEL = "ADR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "ADR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "ADR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "ADR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "ADR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "ADR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "ADR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "ADR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "D";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
	CHILDREN = 47, 48, 49, 50, 51, 52, 53, 54;
}

DISPLAY_LINE
{
	CHANNEL = "D[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "D[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "D[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "D[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "D[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "D[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "D[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "D[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "DR1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
	CHILDREN = 56, 57, 58, 59, 60, 61, 62, 63;
}

DISPLAY_LINE
{
	CHANNEL = "DR1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "DR1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "DR1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "DR1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "DR1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "DR1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "DR1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "DR1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "BUF";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
	CHILDREN = 65, 66, 67, 68, 69, 70, 71, 72;
}

DISPLAY_LINE
{
	CHANNEL = "BUF[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "BUF[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "BUF[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "BUF[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "BUF[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "BUF[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "BUF[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "BUF[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "NUM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 0;
	CHILDREN = 74, 75, 76, 77, 78, 79, 80, 81;
}

DISPLAY_LINE
{
	CHANNEL = "NUM[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "NUM[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "NUM[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "NUM[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "NUM[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "NUM[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "NUM[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "NUM[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "ControlBus[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 82;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ControlBus[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 83;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ControlBus[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 84;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ControlBus[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 85;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ControlBus[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 86;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ControlBus[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 87;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ControlBus[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 88;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ControlBus[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 89;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 20000;
	MASTER = TRUE;
}
;
