/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000.0;
	SIMULATION_TIME = 2000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ADDRESS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ADDRESS[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS";
}

SIGNAL("adrToRAM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("adrToRAM[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adrToRAM";
}

SIGNAL("adrToRAM[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adrToRAM";
}

SIGNAL("adrToRAM[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adrToRAM";
}

SIGNAL("adrToRAM[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adrToRAM";
}

SIGNAL("adrToRAM[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adrToRAM";
}

SIGNAL("adrToRAM[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adrToRAM";
}

SIGNAL("adrToRAM[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adrToRAM";
}

SIGNAL("adrToRAM[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adrToRAM";
}

SIGNAL("CNTR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CNTR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CNTR";
}

SIGNAL("CNTR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CNTR";
}

SIGNAL("CNTR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CNTR";
}

SIGNAL("CNTR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CNTR";
}

SIGNAL("CNTR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CNTR";
}

SIGNAL("CNTR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CNTR";
}

SIGNAL("CNTR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CNTR";
}

SIGNAL("CNTR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CNTR";
}

SIGNAL("D_T")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D_T[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_T";
}

SIGNAL("D_T[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_T";
}

SIGNAL("D_T[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_T";
}

SIGNAL("D_T[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_T";
}

SIGNAL("D_T[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_T";
}

SIGNAL("D_T[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_T";
}

SIGNAL("D_T[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_T";
}

SIGNAL("D_T[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_T";
}

SIGNAL("dataFromCPU")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dataFromCPU[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataFromCPU";
}

SIGNAL("dataFromCPU[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataFromCPU";
}

SIGNAL("dataFromCPU[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataFromCPU";
}

SIGNAL("dataFromCPU[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataFromCPU";
}

SIGNAL("dataFromCPU[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataFromCPU";
}

SIGNAL("dataFromCPU[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataFromCPU";
}

SIGNAL("dataFromCPU[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataFromCPU";
}

SIGNAL("dataFromCPU[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataFromCPU";
}

SIGNAL("dataToCPU")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dataToCPU[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToCPU";
}

SIGNAL("dataToCPU[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToCPU";
}

SIGNAL("dataToCPU[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToCPU";
}

SIGNAL("dataToCPU[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToCPU";
}

SIGNAL("dataToCPU[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToCPU";
}

SIGNAL("dataToCPU[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToCPU";
}

SIGNAL("dataToCPU[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToCPU";
}

SIGNAL("dataToCPU[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToCPU";
}

SIGNAL("dataToRAM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dataToRAM[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToRAM";
}

SIGNAL("dataToRAM[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToRAM";
}

SIGNAL("dataToRAM[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToRAM";
}

SIGNAL("dataToRAM[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToRAM";
}

SIGNAL("dataToRAM[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToRAM";
}

SIGNAL("dataToRAM[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToRAM";
}

SIGNAL("dataToRAM[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToRAM";
}

SIGNAL("dataToRAM[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataToRAM";
}

SIGNAL("hit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("miss")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("read")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("T_CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("T_R")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("T_W")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("write")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CELL00")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CELL00[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL00";
}

SIGNAL("CELL01")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CELL01[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL01";
}

SIGNAL("CELL02")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CELL02[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL02";
}

SIGNAL("CELL03")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CELL03[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL03";
}

SIGNAL("CELL10")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CELL10[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL10";
}

SIGNAL("CELL00[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL00";
}

SIGNAL("CELL00[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL00";
}

SIGNAL("CELL00[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL00";
}

SIGNAL("CELL00[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL00";
}

SIGNAL("CELL00[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL00";
}

SIGNAL("CELL00[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL00";
}

SIGNAL("CELL00[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL00";
}

SIGNAL("CELL01[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL01";
}

SIGNAL("CELL01[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL01";
}

SIGNAL("CELL01[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL01";
}

SIGNAL("CELL01[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL01";
}

SIGNAL("CELL01[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL01";
}

SIGNAL("CELL01[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL01";
}

SIGNAL("CELL01[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL01";
}

SIGNAL("CELL02[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL02";
}

SIGNAL("CELL02[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL02";
}

SIGNAL("CELL02[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL02";
}

SIGNAL("CELL02[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL02";
}

SIGNAL("CELL02[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL02";
}

SIGNAL("CELL02[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL02";
}

SIGNAL("CELL02[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL02";
}

SIGNAL("CELL03[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL03";
}

SIGNAL("CELL03[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL03";
}

SIGNAL("CELL03[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL03";
}

SIGNAL("CELL03[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL03";
}

SIGNAL("CELL03[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL03";
}

SIGNAL("CELL03[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL03";
}

SIGNAL("CELL03[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL03";
}

SIGNAL("CELL10[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL10";
}

SIGNAL("CELL10[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL10";
}

SIGNAL("CELL10[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL10";
}

SIGNAL("CELL10[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL10";
}

SIGNAL("CELL10[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL10";
}

SIGNAL("CELL10[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL10";
}

SIGNAL("CELL10[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL10";
}

SIGNAL("TEST")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("TEST[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TEST";
}

SIGNAL("TEST[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TEST";
}

SIGNAL("TEST[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TEST";
}

SIGNAL("TEST[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TEST";
}

SIGNAL("TEST[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TEST";
}

SIGNAL("TEST[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TEST";
}

SIGNAL("TEST[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TEST";
}

SIGNAL("TEST[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TEST";
}

SIGNAL("sCLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sWRITE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sADDR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sADDR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sADDR";
}

SIGNAL("sADDR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sADDR";
}

SIGNAL("sADDR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sADDR";
}

SIGNAL("sADDR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sADDR";
}

SIGNAL("sADDR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sADDR";
}

SIGNAL("sADDR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sADDR";
}

SIGNAL("CELL100")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CELL100[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL100";
}

SIGNAL("CELL100[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL100";
}

SIGNAL("CELL100[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL100";
}

SIGNAL("CELL100[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL100";
}

SIGNAL("CELL100[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL100";
}

SIGNAL("CELL100[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL100";
}

SIGNAL("CELL100[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL100";
}

SIGNAL("CELL100[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CELL100";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 42;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 56;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("ADDRESS[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1050.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 750.0;
	}
}

TRANSITION_LIST("ADDRESS[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("ADDRESS[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("ADDRESS[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 850.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 950.0;
	}
}

TRANSITION_LIST("ADDRESS[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("ADDRESS[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("ADDRESS[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1790.0;
	}
}

TRANSITION_LIST("ADDRESS[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1750.0;
	}
}

TRANSITION_LIST("adrToRAM[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1050.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 750.0;
	}
}

TRANSITION_LIST("adrToRAM[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("adrToRAM[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 90.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL X FOR 10.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 630.0;
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("adrToRAM[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 90.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL X FOR 10.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 630.0;
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("adrToRAM[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 80.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL X FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 160.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 630.0;
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("adrToRAM[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL X FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 160.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 630.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 70.0;
	}
}

TRANSITION_LIST("adrToRAM[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 630.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("adrToRAM[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 630.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("CNTR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CNTR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CNTR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CNTR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CNTR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 750.0;
	}
}

TRANSITION_LIST("CNTR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 70.0;
	}
}

TRANSITION_LIST("CNTR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("CNTR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 620.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("D_T[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 180.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("D_T[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 180.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("D_T[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 180.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("D_T[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 130.0;
	}
}

TRANSITION_LIST("D_T[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("D_T[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 90.0;
	}
}

TRANSITION_LIST("D_T[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("D_T[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("dataFromCPU[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("dataFromCPU[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("dataFromCPU[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("dataFromCPU[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 980.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 550.0;
	}
}

TRANSITION_LIST("dataFromCPU[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("dataFromCPU[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("dataFromCPU[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("dataFromCPU[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 980.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 550.0;
	}
}

TRANSITION_LIST("dataToCPU[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL X FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 170.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 600.0;
		LEVEL Z FOR 150.0;
	}
}

TRANSITION_LIST("dataToCPU[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL X FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 170.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 600.0;
		LEVEL Z FOR 150.0;
	}
}

TRANSITION_LIST("dataToCPU[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL X FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 170.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 600.0;
		LEVEL Z FOR 150.0;
	}
}

TRANSITION_LIST("dataToCPU[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 170.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 600.0;
		LEVEL Z FOR 150.0;
	}
}

TRANSITION_LIST("dataToCPU[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 170.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 600.0;
		LEVEL Z FOR 150.0;
	}
}

TRANSITION_LIST("dataToCPU[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 170.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 600.0;
		LEVEL Z FOR 150.0;
	}
}

TRANSITION_LIST("dataToCPU[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 170.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 600.0;
		LEVEL Z FOR 150.0;
	}
}

TRANSITION_LIST("dataToCPU[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL X FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 170.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 600.0;
		LEVEL Z FOR 150.0;
	}
}

TRANSITION_LIST("dataToRAM[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 180.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("dataToRAM[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 180.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("dataToRAM[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 180.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("dataToRAM[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 130.0;
	}
}

TRANSITION_LIST("dataToRAM[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("dataToRAM[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 90.0;
	}
}

TRANSITION_LIST("dataToRAM[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("dataToRAM[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("hit")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 90.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 630.0;
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("miss")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 90.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 170.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 170.0;
		LEVEL 0 FOR 630.0;
		LEVEL 1 FOR 150.0;
	}
}

TRANSITION_LIST("read")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 750.0;
	}
}

TRANSITION_LIST("T_CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
	}
}

TRANSITION_LIST("T_R")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 70.0;
	}
}

TRANSITION_LIST("T_W")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 850.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 920.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 70.0;
	}
}

TRANSITION_LIST("write")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1550.0;
	}
}

TRANSITION_LIST("CELL00[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 740.0;
		LEVEL 0 FOR 1040.0;
	}
}

TRANSITION_LIST("CELL01[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL02[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL03[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL10[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 1560.0;
	}
}

TRANSITION_LIST("CELL00[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL00[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 740.0;
		LEVEL 0 FOR 1040.0;
	}
}

TRANSITION_LIST("CELL00[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL00[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 740.0;
		LEVEL 0 FOR 1040.0;
	}
}

TRANSITION_LIST("CELL00[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL00[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 740.0;
		LEVEL 0 FOR 1040.0;
	}
}

TRANSITION_LIST("CELL00[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1780.0;
	}
}

TRANSITION_LIST("CELL01[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL01[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL01[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL01[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL01[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL01[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 860.0;
		LEVEL 0 FOR 1020.0;
	}
}

TRANSITION_LIST("CELL01[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL02[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL02[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL02[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL02[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL02[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL02[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 860.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("CELL02[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 860.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("CELL03[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL03[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL03[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL03[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL03[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 860.0;
		LEVEL 0 FOR 980.0;
	}
}

TRANSITION_LIST("CELL03[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL03[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL10[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("CELL10[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 1560.0;
	}
}

TRANSITION_LIST("CELL10[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 1520.0;
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("CELL10[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 1560.0;
	}
}

TRANSITION_LIST("CELL10[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 1560.0;
	}
}

TRANSITION_LIST("CELL10[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 1560.0;
	}
}

TRANSITION_LIST("CELL10[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 1600.0;
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("TEST[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 650.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("TEST[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1150.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 830.0;
	}
}

TRANSITION_LIST("TEST[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 650.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("TEST[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 130.0;
	}
}

TRANSITION_LIST("TEST[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 650.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("TEST[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 90.0;
	}
}

TRANSITION_LIST("TEST[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 690.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("TEST[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("sCLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 52;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 210.0;
		NODE
		{
			REPEAT = 37;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
	}
}

TRANSITION_LIST("sWRITE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1550.0;
	}
}

TRANSITION_LIST("sADDR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("sADDR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 850.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 950.0;
	}
}

TRANSITION_LIST("sADDR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("sADDR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("sADDR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1790.0;
	}
}

TRANSITION_LIST("sADDR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1750.0;
	}
}

TRANSITION_LIST("CELL100[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1160.0;
		LEVEL 1 FOR 840.0;
	}
}

TRANSITION_LIST("CELL100[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1160.0;
		LEVEL 1 FOR 840.0;
	}
}

TRANSITION_LIST("CELL100[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1160.0;
		LEVEL 1 FOR 840.0;
	}
}

TRANSITION_LIST("CELL100[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1160.0;
		LEVEL 1 FOR 840.0;
	}
}

TRANSITION_LIST("CELL100[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1160.0;
		LEVEL 1 FOR 840.0;
	}
}

TRANSITION_LIST("CELL100[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1160.0;
		LEVEL 1 FOR 840.0;
	}
}

TRANSITION_LIST("CELL100[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1160.0;
		LEVEL 1 FOR 840.0;
	}
}

TRANSITION_LIST("CELL100[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1160.0;
		LEVEL 1 FOR 840.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CNTR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "read";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "adrToRAM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25, 26, 27, 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "adrToRAM[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "adrToRAM[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "adrToRAM[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "adrToRAM[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "adrToRAM[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "adrToRAM[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "adrToRAM[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "adrToRAM[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "dataFromCPU";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
	CHILDREN = 31, 32, 33, 34, 35, 36, 37, 38;
}

DISPLAY_LINE
{
	CHANNEL = "dataFromCPU[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "dataFromCPU[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "dataFromCPU[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "dataFromCPU[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "dataFromCPU[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "dataFromCPU[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "dataFromCPU[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "dataFromCPU[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "dataToCPU";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
	CHILDREN = 40, 41, 42, 43, 44, 45, 46, 47;
}

DISPLAY_LINE
{
	CHANNEL = "dataToCPU[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "dataToCPU[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "dataToCPU[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "dataToCPU[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "dataToCPU[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "dataToCPU[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "dataToCPU[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "dataToCPU[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "dataToRAM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
	CHILDREN = 49, 50, 51, 52, 53, 54, 55, 56;
}

DISPLAY_LINE
{
	CHANNEL = "dataToRAM[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "dataToRAM[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "dataToRAM[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "dataToRAM[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "dataToRAM[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "dataToRAM[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "dataToRAM[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "dataToRAM[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "hit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "miss";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D_T";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
	CHILDREN = 60, 61, 62, 63, 64, 65, 66, 67;
}

DISPLAY_LINE
{
	CHANNEL = "D_T[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "D_T[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "D_T[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "D_T[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "D_T[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "D_T[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "D_T[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "D_T[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "T_CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "T_R";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "T_W";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CELL00";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
	CHILDREN = 72, 73, 74, 75, 76, 77, 78, 79;
}

DISPLAY_LINE
{
	CHANNEL = "CELL00[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "CELL00[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "CELL00[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "CELL00[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "CELL00[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "CELL00[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "CELL00[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "CELL00[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "CELL01";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 0;
	CHILDREN = 81, 82, 83, 84, 85, 86, 87, 88;
}

DISPLAY_LINE
{
	CHANNEL = "CELL01[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CELL01[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CELL01[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CELL01[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CELL01[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CELL01[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CELL01[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CELL01[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CELL02";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 0;
	CHILDREN = 90, 91, 92, 93, 94, 95, 96, 97;
}

DISPLAY_LINE
{
	CHANNEL = "CELL02[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "CELL02[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "CELL02[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "CELL02[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "CELL02[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "CELL02[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "CELL02[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "CELL02[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "CELL03";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 0;
	CHILDREN = 99, 100, 101, 102, 103, 104, 105, 106;
}

DISPLAY_LINE
{
	CHANNEL = "CELL03[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "CELL03[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "CELL03[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "CELL03[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "CELL03[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "CELL03[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "CELL03[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "CELL03[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "CELL10";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 0;
	CHILDREN = 108, 109, 110, 111, 112, 113, 114, 115;
}

DISPLAY_LINE
{
	CHANNEL = "CELL10[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 107;
}

DISPLAY_LINE
{
	CHANNEL = "CELL10[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 107;
}

DISPLAY_LINE
{
	CHANNEL = "CELL10[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 107;
}

DISPLAY_LINE
{
	CHANNEL = "CELL10[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 107;
}

DISPLAY_LINE
{
	CHANNEL = "CELL10[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 107;
}

DISPLAY_LINE
{
	CHANNEL = "CELL10[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 107;
}

DISPLAY_LINE
{
	CHANNEL = "CELL10[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 107;
}

DISPLAY_LINE
{
	CHANNEL = "CELL10[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 107;
}

DISPLAY_LINE
{
	CHANNEL = "TEST";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 0;
	CHILDREN = 117, 118, 119, 120, 121, 122, 123, 124;
}

DISPLAY_LINE
{
	CHANNEL = "TEST[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "TEST[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "TEST[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "TEST[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "TEST[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "TEST[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "TEST[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "TEST[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "sADDR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 125;
	TREE_LEVEL = 0;
	CHILDREN = 126, 127, 128, 129, 130, 131;
}

DISPLAY_LINE
{
	CHANNEL = "sADDR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 125;
}

DISPLAY_LINE
{
	CHANNEL = "sADDR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 125;
}

DISPLAY_LINE
{
	CHANNEL = "sADDR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 125;
}

DISPLAY_LINE
{
	CHANNEL = "sADDR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 125;
}

DISPLAY_LINE
{
	CHANNEL = "sADDR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 125;
}

DISPLAY_LINE
{
	CHANNEL = "sADDR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 125;
}

DISPLAY_LINE
{
	CHANNEL = "sCLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 132;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sWRITE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 133;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CELL100";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 0;
	CHILDREN = 135, 136, 137, 138, 139, 140, 141, 142;
}

DISPLAY_LINE
{
	CHANNEL = "CELL100[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 134;
}

DISPLAY_LINE
{
	CHANNEL = "CELL100[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 134;
}

DISPLAY_LINE
{
	CHANNEL = "CELL100[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 134;
}

DISPLAY_LINE
{
	CHANNEL = "CELL100[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 134;
}

DISPLAY_LINE
{
	CHANNEL = "CELL100[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 134;
}

DISPLAY_LINE
{
	CHANNEL = "CELL100[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 134;
}

DISPLAY_LINE
{
	CHANNEL = "CELL100[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 134;
}

DISPLAY_LINE
{
	CHANNEL = "CELL100[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 134;
}

TIME_BAR
{
	TIME = 20000;
	MASTER = TRUE;
}
;
